data_loading:
  tickers: ['AAPL', 'MA', 'CSCO', 'MSFT', 'AMZN', 'GOOG', 'IBM']
  period: "3y"
  interval: "1d"
  fetch_delay: 3

feature_engineering:
  correlation_threshold: 0.9
  sequence_length: 30
  prediction_length: 1 # Currently only supporting 1-day ahead

optimization:
  n_trials: 30
  epochs: 5
  patience: 5

training:
  epochs: 50

database:
  dbname: 'airflow'
  user: 'airflow'
  password: 'airflow'
  host: 'postgres'
  port: '5432'

monitoring:
  performance_thresholds:
    mape_max: 0.10        # Threshold: Max 10% MAPE
    direction_accuracy_min: 0.55 # Threshold: Min 55% directional accuracy
  evaluation_lag_days: 1 # How many days to wait for actuals (e.g., T+1 for stock prices)

airflow_dags:
  daily_operations_dag_id: "daily_stock_operations_prod"
  retraining_pipeline_dag_id: "stock_model_retraining_prod"
  # Task IDs for branching in daily_ops_dag
  retraining_trigger_task_id: "trigger_retraining_pipeline_task" # Used by BranchOp AND TriggerDagRunOp
  no_retraining_task_id: "no_retraining_needed_task"      # Used by BranchOp AND DummyOp
  # Task IDs for branching in retraining_dag
  promotion_task_id: "promote_candidate_to_production_task" # Used by BranchOp AND PythonOp for promotion
  no_promotion_task_id: "do_not_promote_task"                 # Used by BranchOp AND DummyOp

alert_email: 'your_actual_email@example.com' # For Airflow alerts

schedules:
  daily_dag: '0 2 * * 1-5' # Example: 2 AM UTC Mon-Fri

model_promotion: # For retraining DAG's evaluation
  metric: "final_avg_mape_test" # Metric from train_model.py's eval output to compare
  higher_is_better: False      # For MAPE, lower is better

output_paths:
  raw_data_template: "/opt/airflow/data/raw/{ticker}_raw.pkl"
  predictions_dir: "/opt/airflow/data/predictions" # Absolute path inside Docker containers

  # processed_data_path: "/opt/airflow/data/processed/all_processed_data.npz" # Saving as numpy archive
  # scalers_path: "/opt/airflow/data/processed/scalers.pkl"
  # split_data_path: "/opt/airflow/data/features/split_scaled_data.npz"
  # best_params_path: "/opt/airflow/config/best_params.json" # Config might also need absolute if written by a task
  # Note: We are mounting ./config to /opt/airflow/config, so this path for best_params is correct

mlflow:
  experiment_name: "Stock_Price_Prediction_LSTM_Refactored"
  final_run_name: "final_model_training"
  optuna_run_prefix: "optuna_trial_" # Prefix for Optuna runs
  mlflow_uri: "http://mlflow-server:5000" # MLflow server URI (internal to Docker network)
  tracking_uri: "http://mlflow-server:5000" # MLflow tracking URI (internal to Docker network)
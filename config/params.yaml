data_loading:
  tickers: ['AAPL', 'MA', 'CSCO', 'MSFT', 'AMZN', 'GOOG', 'IBM']
  period: "3y"
  interval: "1d"
  fetch_delay: 5 # seconds between ticker fetches

feature_engineering:
  correlation_threshold: 0.9
  sequence_length: 30
  prediction_length: 1 # Currently only supporting 1-day ahead from the refactored logic

optimization:
  n_trials: 20 # Optuna trials
  epochs: 20   # Epochs during optimization
  patience: 5

training:
  epochs: 50    # Epochs for final training

output_paths: # Paths relative to /opt/airflow within the container
  raw_data_template: "data/raw/{ticker}_raw.pkl"
  processed_data_path: "data/processed/all_processed_data.npz" # Saving as numpy archive
  scalers_path: "data/processed/scalers.pkl"
  split_data_path: "data/features/split_scaled_data.npz"
  best_params_path: "config/best_params.json"
  # Final model is saved by MLflow, not explicitly here

mlflow:
  experiment_name: "Stock_Price_Prediction_LSTM_Refactored"
  final_run_name: "final_model_training"
  optuna_run_prefix: "optuna_trial_" # Maybe not log optuna trials directly